// DummyComponent.js

import React from 'react';

const Find = () => {
  return (
    <div className='ongoing-container'>
      <ProjectCard from="ongoing" heading="This is heading" description="I was stuck on same issue for hours now figure out exact solution for this as mentioned in documentation of expressjs @Quentin has pointed towards exact issue. Here I am posting some more details so it may help someone else to resolve this issue quickly. When you are posting JSON object with 'Content-Type':'application/json' fetch or any other method browser will request for CORS setting first for security reason then if it receives CORS options which is very easy to achieve. Then it will post original object to server as NodeJS server is waiting for 'Content-Type':'application/json' 0I was stuck on same issue for hours now figure out exact solution for this as mentioned in documentation of expressjs @Quentin has pointed towards exact issue. Here I am posting some more details so it may help someone else to resolve this issue quickly. When you are posting JSON object with 'Content-Type':'application/json' fetch or any other method browser will request for CORS setting first for security reason then if it receives CORS options which is very easy to achieve. Then it will post original object to server as NodeJS server is waiting for 'Content-Type':'application/json'"/>
      <ProjectCard from="ongoing"heading="This is heading" description="I was stuck on same issue for hours now figure out exact solution for this as mentioned in documentation of expressjs @Quentin has pointed towards exact issue. Here I am posting some more details so it may help someone else to resolve this issue quickly. When you are posting JSON object with 'Content-Type':'application/json' fetch or any other method browser will request for CORS setting first for security reason then if it receives CORS options which is very easy to achieve. Then it will post original object to server as NodeJS server is waiting for 'Content-Type':'application/json' 0I was stuck on same issue for hours now figure out exact solution for this as mentioned in documentation of expressjs @Quentin has pointed towards exact issue. Here I am posting some more details so it may help someone else to resolve this issue quickly. When you are posting JSON object with 'Content-Type':'application/json' fetch or any other method browser will request for CORS setting first for security reason then if it receives CORS options which is very easy to achieve. Then it will post original object to server as NodeJS server is waiting for 'Content-Type':'application/json'"/>
      <ProjectCard from="ongoing" heading="This is heading" description="I was stuck on same issue for hours now figure out exact solution for this as mentioned in documentation of expressjs @Quentin has pointed towards exact issue. Here I am posting some more details so it may help someone else to resolve this issue quickly. When you are posting JSON object with 'Content-Type':'application/json' fetch or any other method browser will request for CORS setting first for security reason then if it receives CORS options which is very easy to achieve. Then it will post original object to server as NodeJS server is waiting for 'Content-Type':'application/json' 0I was stuck on same issue for hours now figure out exact solution for this as mentioned in documentation of expressjs @Quentin has pointed towards exact issue. Here I am posting some more details so it may help someone else to resolve this issue quickly. When you are posting JSON object with 'Content-Type':'application/json' fetch or any other method browser will request for CORS setting first for security reason then if it receives CORS options which is very easy to achieve. Then it will post original object to server as NodeJS server is waiting for 'Content-Type':'application/json'"/>
      <ProjectCard from="ongoing" heading="This is heading" description="I was stuck on same issue for hours now figure out exact solution for this as mentioned in documentation of expressjs @Quentin has pointed towards exact issue. Here I am posting some more details so it may help someone else to resolve this issue quickly. When you are posting JSON object with 'Content-Type':'application/json' fetch or any other method browser will request for CORS setting first for security reason then if it receives CORS options which is very easy to achieve. Then it will post original object to server as NodeJS server is waiting for 'Content-Type':'application/json' 0I was stuck on same issue for hours now figure out exact solution for this as mentioned in documentation of expressjs @Quentin has pointed towards exact issue. Here I am posting some more details so it may help someone else to resolve this issue quickly. When you are posting JSON object with 'Content-Type':'application/json' fetch or any other method browser will request for CORS setting first for security reason then if it receives CORS options which is very easy to achieve. Then it will post original object to server as NodeJS server is waiting for 'Content-Type':'application/json'"/>
      <ProjectCard from="inprogress" heading="This is heading" description="I was stuck on same issue for hours now figure out exact solution for this as mentioned in documentation of expressjs @Quentin has pointed towards exact issue. Here I am posting some more details so it may help someone else to resolve this issue quickly. When you are posting JSON object with 'Content-Type':'application/json' fetch or any other method browser will request for CORS setting first for security reason then if it receives CORS options which is very easy to achieve. Then it will post original object to server as NodeJS server is waiting for 'Content-Type':'application/json' 0I was stuck on same issue for hours now figure out exact solution for this as mentioned in documentation of expressjs @Quentin has pointed towards exact issue. Here I am posting some more details so it may help someone else to resolve this issue quickly. When you are posting JSON object with 'Content-Type':'application/json' fetch or any other method browser will request for CORS setting first for security reason then if it receives CORS options which is very easy to achieve. Then it will post original object to server as NodeJS server is waiting for 'Content-Type':'application/json'"/>
      <ProjectCard from="inprogress" heading="This is heading" description="I was stuck on same issue for hours now figure out exact solution for this as mentioned in documentation of expressjs @Quentin has pointed towards exact issue. Here I am posting some more details so it may help someone else to resolve this issue quickly. When you are posting JSON object with 'Content-Type':'application/json' fetch or any other method browser will request for CORS setting first for security reason then if it receives CORS options which is very easy to achieve. Then it will post original object to server as NodeJS server is waiting for 'Content-Type':'application/json' 0I was stuck on same issue for hours now figure out exact solution for this as mentioned in documentation of expressjs @Quentin has pointed towards exact issue. Here I am posting some more details so it may help someone else to resolve this issue quickly. When you are posting JSON object with 'Content-Type':'application/json' fetch or any other method browser will request for CORS setting first for security reason then if it receives CORS options which is very easy to achieve. Then it will post original object to server as NodeJS server is waiting for 'Content-Type':'application/json'"/>
      <ProjectCard from="inprogress" heading="This is heading" description="I was stuck on same issue for hours now figure out exact solution for this as mentioned in documentation of expressjs @Quentin has pointed towards exact issue. Here I am posting some more details so it may help someone else to resolve this issue quickly. When you are posting JSON object with 'Content-Type':'application/json' fetch or any other method browser will request for CORS setting first for security reason then if it receives CORS options which is very easy to achieve. Then it will post original object to server as NodeJS server is waiting for 'Content-Type':'application/json' 0I was stuck on same issue for hours now figure out exact solution for this as mentioned in documentation of expressjs @Quentin has pointed towards exact issue. Here I am posting some more details so it may help someone else to resolve this issue quickly. When you are posting JSON object with 'Content-Type':'application/json' fetch or any other method browser will request for CORS setting first for security reason then if it receives CORS options which is very easy to achieve. Then it will post original object to server as NodeJS server is waiting for 'Content-Type':'application/json'"/>
      <ProjectCard from="inprogress" heading="This is heading" description="I was stuck on same issue for hours now figure out exact solution for this as mentioned in documentation of expressjs @Quentin has pointed towards exact issue. Here I am posting some more details so it may help someone else to resolve this issue quickly. When you are posting JSON object with 'Content-Type':'application/json' fetch or any other method browser will request for CORS setting first for security reason then if it receives CORS options which is very easy to achieve. Then it will post original object to server as NodeJS server is waiting for 'Content-Type':'application/json' 0I was stuck on same issue for hours now figure out exact solution for this as mentioned in documentation of expressjs @Quentin has pointed towards exact issue. Here I am posting some more details so it may help someone else to resolve this issue quickly. When you are posting JSON object with 'Content-Type':'application/json' fetch or any other method browser will request for CORS setting first for security reason then if it receives CORS options which is very easy to achieve. Then it will post original object to server as NodeJS server is waiting for 'Content-Type':'application/json'"/>
    </div>
  );
};

export default Find;
